// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: audit.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Auditservice {

  /// <summary>Holder for reflection information generated from audit.proto</summary>
  public static partial class AuditReflection {

    #region Descriptor
    /// <summary>File descriptor for audit.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AuditReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgthdWRpdC5wcm90bxIMYXVkaXRzZXJ2aWNlIjwKCkF1ZGl0RW50cnkSCgoC",
            "SWQYASABKAkSDwoHT3JkZXJJZBgCIAEoAxIRCglQYXltZW50SWQYAyABKAMi",
            "PQoSQ3JlYXRlQXVkaXRSZXF1ZXN0EicKBWF1ZGl0GAEgASgLMhguYXVkaXRz",
            "ZXJ2aWNlLkF1ZGl0RW50cnkiRgoTQ3JlYXRlQXVkaXRSZXNwb25zZRIvCg1h",
            "dWRpdFJlc3BvbnNlGAEgASgLMhguYXVkaXRzZXJ2aWNlLkF1ZGl0RW50cnki",
            "OwoQUmVhZEF1ZGl0UmVxdWVzdBInCgVhdWRpdBgBIAEoCzIYLmF1ZGl0c2Vy",
            "dmljZS5BdWRpdEVudHJ5IkQKEVJlYWRBdWRpdFJlc3BvbnNlEi8KDWF1ZGl0",
            "UmVzcG9uc2UYASABKAsyGC5hdWRpdHNlcnZpY2UuQXVkaXRFbnRyeSI+ChNS",
            "ZWFkQWxsQXVkaXRSZXF1ZXN0EicKBWF1ZGl0GAEgASgLMhguYXVkaXRzZXJ2",
            "aWNlLkF1ZGl0RW50cnkiRwoUUmVhZEFsbEF1ZGl0UmVzcG9uc2USLwoNYXVk",
            "aXRSZXNwb25zZRgBIAEoCzIYLmF1ZGl0c2VydmljZS5BdWRpdEVudHJ5Ij0K",
            "ElVwZGF0ZUF1ZGl0UmVxdWVzdBInCgVhdWRpdBgBIAEoCzIYLmF1ZGl0c2Vy",
            "dmljZS5BdWRpdEVudHJ5IkYKE1VwZGF0ZUF1ZGl0UmVzcG9uc2USLwoNYXVk",
            "aXRSZXNwb25zZRgBIAEoCzIYLmF1ZGl0c2VydmljZS5BdWRpdEVudHJ5Ij0K",
            "EkRlbGV0ZUF1ZGl0UmVxdWVzdBInCgVhdWRpdBgBIAEoCzIYLmF1ZGl0c2Vy",
            "dmljZS5BdWRpdEVudHJ5IkYKE0RlbGV0ZUF1ZGl0UmVzcG9uc2USLwoNYXVk",
            "aXRSZXNwb25zZRgBIAEoCzIYLmF1ZGl0c2VydmljZS5BdWRpdEVudHJ5MqID",
            "CgxBdWRpdFNlcnZpY2USTwoGQ3JlYXRlEiAuYXVkaXRzZXJ2aWNlLkNyZWF0",
            "ZUF1ZGl0UmVxdWVzdBohLmF1ZGl0c2VydmljZS5DcmVhdGVBdWRpdFJlc3Bv",
            "bnNlIgASSQoEUmVhZBIeLmF1ZGl0c2VydmljZS5SZWFkQXVkaXRSZXF1ZXN0",
            "Gh8uYXVkaXRzZXJ2aWNlLlJlYWRBdWRpdFJlc3BvbnNlIgASVAoHUmVhZEFs",
            "bBIhLmF1ZGl0c2VydmljZS5SZWFkQWxsQXVkaXRSZXF1ZXN0GiIuYXVkaXRz",
            "ZXJ2aWNlLlJlYWRBbGxBdWRpdFJlc3BvbnNlIgAwARJPCgZVcGRhdGUSIC5h",
            "dWRpdHNlcnZpY2UuVXBkYXRlQXVkaXRSZXF1ZXN0GiEuYXVkaXRzZXJ2aWNl",
            "LlVwZGF0ZUF1ZGl0UmVzcG9uc2UiABJPCgZEZWxldGUSIC5hdWRpdHNlcnZp",
            "Y2UuRGVsZXRlQXVkaXRSZXF1ZXN0GiEuYXVkaXRzZXJ2aWNlLkRlbGV0ZUF1",
            "ZGl0UmVzcG9uc2UiAGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Auditservice.AuditEntry), global::Auditservice.AuditEntry.Parser, new[]{ "Id", "OrderId", "PaymentId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Auditservice.CreateAuditRequest), global::Auditservice.CreateAuditRequest.Parser, new[]{ "Audit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Auditservice.CreateAuditResponse), global::Auditservice.CreateAuditResponse.Parser, new[]{ "AuditResponse" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Auditservice.ReadAuditRequest), global::Auditservice.ReadAuditRequest.Parser, new[]{ "Audit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Auditservice.ReadAuditResponse), global::Auditservice.ReadAuditResponse.Parser, new[]{ "AuditResponse" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Auditservice.ReadAllAuditRequest), global::Auditservice.ReadAllAuditRequest.Parser, new[]{ "Audit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Auditservice.ReadAllAuditResponse), global::Auditservice.ReadAllAuditResponse.Parser, new[]{ "AuditResponse" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Auditservice.UpdateAuditRequest), global::Auditservice.UpdateAuditRequest.Parser, new[]{ "Audit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Auditservice.UpdateAuditResponse), global::Auditservice.UpdateAuditResponse.Parser, new[]{ "AuditResponse" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Auditservice.DeleteAuditRequest), global::Auditservice.DeleteAuditRequest.Parser, new[]{ "Audit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Auditservice.DeleteAuditResponse), global::Auditservice.DeleteAuditResponse.Parser, new[]{ "AuditResponse" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AuditEntry : pb::IMessage<AuditEntry> {
    private static readonly pb::MessageParser<AuditEntry> _parser = new pb::MessageParser<AuditEntry>(() => new AuditEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuditEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Auditservice.AuditReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuditEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuditEntry(AuditEntry other) : this() {
      id_ = other.id_;
      orderId_ = other.orderId_;
      paymentId_ = other.paymentId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuditEntry Clone() {
      return new AuditEntry(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OrderId" field.</summary>
    public const int OrderIdFieldNumber = 2;
    private long orderId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OrderId {
      get { return orderId_; }
      set {
        orderId_ = value;
      }
    }

    /// <summary>Field number for the "PaymentId" field.</summary>
    public const int PaymentIdFieldNumber = 3;
    private long paymentId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PaymentId {
      get { return paymentId_; }
      set {
        paymentId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuditEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuditEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (OrderId != other.OrderId) return false;
      if (PaymentId != other.PaymentId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (OrderId != 0L) hash ^= OrderId.GetHashCode();
      if (PaymentId != 0L) hash ^= PaymentId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (OrderId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(OrderId);
      }
      if (PaymentId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(PaymentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (OrderId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OrderId);
      }
      if (PaymentId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PaymentId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuditEntry other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.OrderId != 0L) {
        OrderId = other.OrderId;
      }
      if (other.PaymentId != 0L) {
        PaymentId = other.PaymentId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            OrderId = input.ReadInt64();
            break;
          }
          case 24: {
            PaymentId = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateAuditRequest : pb::IMessage<CreateAuditRequest> {
    private static readonly pb::MessageParser<CreateAuditRequest> _parser = new pb::MessageParser<CreateAuditRequest>(() => new CreateAuditRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateAuditRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Auditservice.AuditReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAuditRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAuditRequest(CreateAuditRequest other) : this() {
      audit_ = other.audit_ != null ? other.audit_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAuditRequest Clone() {
      return new CreateAuditRequest(this);
    }

    /// <summary>Field number for the "audit" field.</summary>
    public const int AuditFieldNumber = 1;
    private global::Auditservice.AuditEntry audit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Auditservice.AuditEntry Audit {
      get { return audit_; }
      set {
        audit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateAuditRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateAuditRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Audit, other.Audit)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (audit_ != null) hash ^= Audit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (audit_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Audit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (audit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Audit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateAuditRequest other) {
      if (other == null) {
        return;
      }
      if (other.audit_ != null) {
        if (audit_ == null) {
          Audit = new global::Auditservice.AuditEntry();
        }
        Audit.MergeFrom(other.Audit);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (audit_ == null) {
              Audit = new global::Auditservice.AuditEntry();
            }
            input.ReadMessage(Audit);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateAuditResponse : pb::IMessage<CreateAuditResponse> {
    private static readonly pb::MessageParser<CreateAuditResponse> _parser = new pb::MessageParser<CreateAuditResponse>(() => new CreateAuditResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateAuditResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Auditservice.AuditReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAuditResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAuditResponse(CreateAuditResponse other) : this() {
      auditResponse_ = other.auditResponse_ != null ? other.auditResponse_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAuditResponse Clone() {
      return new CreateAuditResponse(this);
    }

    /// <summary>Field number for the "auditResponse" field.</summary>
    public const int AuditResponseFieldNumber = 1;
    private global::Auditservice.AuditEntry auditResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Auditservice.AuditEntry AuditResponse {
      get { return auditResponse_; }
      set {
        auditResponse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateAuditResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateAuditResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AuditResponse, other.AuditResponse)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auditResponse_ != null) hash ^= AuditResponse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auditResponse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AuditResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auditResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuditResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateAuditResponse other) {
      if (other == null) {
        return;
      }
      if (other.auditResponse_ != null) {
        if (auditResponse_ == null) {
          AuditResponse = new global::Auditservice.AuditEntry();
        }
        AuditResponse.MergeFrom(other.AuditResponse);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auditResponse_ == null) {
              AuditResponse = new global::Auditservice.AuditEntry();
            }
            input.ReadMessage(AuditResponse);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReadAuditRequest : pb::IMessage<ReadAuditRequest> {
    private static readonly pb::MessageParser<ReadAuditRequest> _parser = new pb::MessageParser<ReadAuditRequest>(() => new ReadAuditRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadAuditRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Auditservice.AuditReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadAuditRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadAuditRequest(ReadAuditRequest other) : this() {
      audit_ = other.audit_ != null ? other.audit_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadAuditRequest Clone() {
      return new ReadAuditRequest(this);
    }

    /// <summary>Field number for the "audit" field.</summary>
    public const int AuditFieldNumber = 1;
    private global::Auditservice.AuditEntry audit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Auditservice.AuditEntry Audit {
      get { return audit_; }
      set {
        audit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadAuditRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadAuditRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Audit, other.Audit)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (audit_ != null) hash ^= Audit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (audit_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Audit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (audit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Audit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadAuditRequest other) {
      if (other == null) {
        return;
      }
      if (other.audit_ != null) {
        if (audit_ == null) {
          Audit = new global::Auditservice.AuditEntry();
        }
        Audit.MergeFrom(other.Audit);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (audit_ == null) {
              Audit = new global::Auditservice.AuditEntry();
            }
            input.ReadMessage(Audit);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReadAuditResponse : pb::IMessage<ReadAuditResponse> {
    private static readonly pb::MessageParser<ReadAuditResponse> _parser = new pb::MessageParser<ReadAuditResponse>(() => new ReadAuditResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadAuditResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Auditservice.AuditReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadAuditResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadAuditResponse(ReadAuditResponse other) : this() {
      auditResponse_ = other.auditResponse_ != null ? other.auditResponse_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadAuditResponse Clone() {
      return new ReadAuditResponse(this);
    }

    /// <summary>Field number for the "auditResponse" field.</summary>
    public const int AuditResponseFieldNumber = 1;
    private global::Auditservice.AuditEntry auditResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Auditservice.AuditEntry AuditResponse {
      get { return auditResponse_; }
      set {
        auditResponse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadAuditResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadAuditResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AuditResponse, other.AuditResponse)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auditResponse_ != null) hash ^= AuditResponse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auditResponse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AuditResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auditResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuditResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadAuditResponse other) {
      if (other == null) {
        return;
      }
      if (other.auditResponse_ != null) {
        if (auditResponse_ == null) {
          AuditResponse = new global::Auditservice.AuditEntry();
        }
        AuditResponse.MergeFrom(other.AuditResponse);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auditResponse_ == null) {
              AuditResponse = new global::Auditservice.AuditEntry();
            }
            input.ReadMessage(AuditResponse);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReadAllAuditRequest : pb::IMessage<ReadAllAuditRequest> {
    private static readonly pb::MessageParser<ReadAllAuditRequest> _parser = new pb::MessageParser<ReadAllAuditRequest>(() => new ReadAllAuditRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadAllAuditRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Auditservice.AuditReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadAllAuditRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadAllAuditRequest(ReadAllAuditRequest other) : this() {
      audit_ = other.audit_ != null ? other.audit_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadAllAuditRequest Clone() {
      return new ReadAllAuditRequest(this);
    }

    /// <summary>Field number for the "audit" field.</summary>
    public const int AuditFieldNumber = 1;
    private global::Auditservice.AuditEntry audit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Auditservice.AuditEntry Audit {
      get { return audit_; }
      set {
        audit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadAllAuditRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadAllAuditRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Audit, other.Audit)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (audit_ != null) hash ^= Audit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (audit_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Audit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (audit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Audit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadAllAuditRequest other) {
      if (other == null) {
        return;
      }
      if (other.audit_ != null) {
        if (audit_ == null) {
          Audit = new global::Auditservice.AuditEntry();
        }
        Audit.MergeFrom(other.Audit);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (audit_ == null) {
              Audit = new global::Auditservice.AuditEntry();
            }
            input.ReadMessage(Audit);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ReadAllAuditResponse : pb::IMessage<ReadAllAuditResponse> {
    private static readonly pb::MessageParser<ReadAllAuditResponse> _parser = new pb::MessageParser<ReadAllAuditResponse>(() => new ReadAllAuditResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadAllAuditResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Auditservice.AuditReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadAllAuditResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadAllAuditResponse(ReadAllAuditResponse other) : this() {
      auditResponse_ = other.auditResponse_ != null ? other.auditResponse_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadAllAuditResponse Clone() {
      return new ReadAllAuditResponse(this);
    }

    /// <summary>Field number for the "auditResponse" field.</summary>
    public const int AuditResponseFieldNumber = 1;
    private global::Auditservice.AuditEntry auditResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Auditservice.AuditEntry AuditResponse {
      get { return auditResponse_; }
      set {
        auditResponse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadAllAuditResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadAllAuditResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AuditResponse, other.AuditResponse)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auditResponse_ != null) hash ^= AuditResponse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auditResponse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AuditResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auditResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuditResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadAllAuditResponse other) {
      if (other == null) {
        return;
      }
      if (other.auditResponse_ != null) {
        if (auditResponse_ == null) {
          AuditResponse = new global::Auditservice.AuditEntry();
        }
        AuditResponse.MergeFrom(other.AuditResponse);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auditResponse_ == null) {
              AuditResponse = new global::Auditservice.AuditEntry();
            }
            input.ReadMessage(AuditResponse);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateAuditRequest : pb::IMessage<UpdateAuditRequest> {
    private static readonly pb::MessageParser<UpdateAuditRequest> _parser = new pb::MessageParser<UpdateAuditRequest>(() => new UpdateAuditRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateAuditRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Auditservice.AuditReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAuditRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAuditRequest(UpdateAuditRequest other) : this() {
      audit_ = other.audit_ != null ? other.audit_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAuditRequest Clone() {
      return new UpdateAuditRequest(this);
    }

    /// <summary>Field number for the "audit" field.</summary>
    public const int AuditFieldNumber = 1;
    private global::Auditservice.AuditEntry audit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Auditservice.AuditEntry Audit {
      get { return audit_; }
      set {
        audit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateAuditRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateAuditRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Audit, other.Audit)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (audit_ != null) hash ^= Audit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (audit_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Audit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (audit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Audit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateAuditRequest other) {
      if (other == null) {
        return;
      }
      if (other.audit_ != null) {
        if (audit_ == null) {
          Audit = new global::Auditservice.AuditEntry();
        }
        Audit.MergeFrom(other.Audit);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (audit_ == null) {
              Audit = new global::Auditservice.AuditEntry();
            }
            input.ReadMessage(Audit);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateAuditResponse : pb::IMessage<UpdateAuditResponse> {
    private static readonly pb::MessageParser<UpdateAuditResponse> _parser = new pb::MessageParser<UpdateAuditResponse>(() => new UpdateAuditResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateAuditResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Auditservice.AuditReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAuditResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAuditResponse(UpdateAuditResponse other) : this() {
      auditResponse_ = other.auditResponse_ != null ? other.auditResponse_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAuditResponse Clone() {
      return new UpdateAuditResponse(this);
    }

    /// <summary>Field number for the "auditResponse" field.</summary>
    public const int AuditResponseFieldNumber = 1;
    private global::Auditservice.AuditEntry auditResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Auditservice.AuditEntry AuditResponse {
      get { return auditResponse_; }
      set {
        auditResponse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateAuditResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateAuditResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AuditResponse, other.AuditResponse)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auditResponse_ != null) hash ^= AuditResponse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auditResponse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AuditResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auditResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuditResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateAuditResponse other) {
      if (other == null) {
        return;
      }
      if (other.auditResponse_ != null) {
        if (auditResponse_ == null) {
          AuditResponse = new global::Auditservice.AuditEntry();
        }
        AuditResponse.MergeFrom(other.AuditResponse);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auditResponse_ == null) {
              AuditResponse = new global::Auditservice.AuditEntry();
            }
            input.ReadMessage(AuditResponse);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteAuditRequest : pb::IMessage<DeleteAuditRequest> {
    private static readonly pb::MessageParser<DeleteAuditRequest> _parser = new pb::MessageParser<DeleteAuditRequest>(() => new DeleteAuditRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteAuditRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Auditservice.AuditReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAuditRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAuditRequest(DeleteAuditRequest other) : this() {
      audit_ = other.audit_ != null ? other.audit_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAuditRequest Clone() {
      return new DeleteAuditRequest(this);
    }

    /// <summary>Field number for the "audit" field.</summary>
    public const int AuditFieldNumber = 1;
    private global::Auditservice.AuditEntry audit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Auditservice.AuditEntry Audit {
      get { return audit_; }
      set {
        audit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteAuditRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteAuditRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Audit, other.Audit)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (audit_ != null) hash ^= Audit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (audit_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Audit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (audit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Audit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteAuditRequest other) {
      if (other == null) {
        return;
      }
      if (other.audit_ != null) {
        if (audit_ == null) {
          Audit = new global::Auditservice.AuditEntry();
        }
        Audit.MergeFrom(other.Audit);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (audit_ == null) {
              Audit = new global::Auditservice.AuditEntry();
            }
            input.ReadMessage(Audit);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteAuditResponse : pb::IMessage<DeleteAuditResponse> {
    private static readonly pb::MessageParser<DeleteAuditResponse> _parser = new pb::MessageParser<DeleteAuditResponse>(() => new DeleteAuditResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteAuditResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Auditservice.AuditReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAuditResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAuditResponse(DeleteAuditResponse other) : this() {
      auditResponse_ = other.auditResponse_ != null ? other.auditResponse_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAuditResponse Clone() {
      return new DeleteAuditResponse(this);
    }

    /// <summary>Field number for the "auditResponse" field.</summary>
    public const int AuditResponseFieldNumber = 1;
    private global::Auditservice.AuditEntry auditResponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Auditservice.AuditEntry AuditResponse {
      get { return auditResponse_; }
      set {
        auditResponse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteAuditResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteAuditResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AuditResponse, other.AuditResponse)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (auditResponse_ != null) hash ^= AuditResponse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (auditResponse_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AuditResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (auditResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuditResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteAuditResponse other) {
      if (other == null) {
        return;
      }
      if (other.auditResponse_ != null) {
        if (auditResponse_ == null) {
          AuditResponse = new global::Auditservice.AuditEntry();
        }
        AuditResponse.MergeFrom(other.AuditResponse);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (auditResponse_ == null) {
              AuditResponse = new global::Auditservice.AuditEntry();
            }
            input.ReadMessage(AuditResponse);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
