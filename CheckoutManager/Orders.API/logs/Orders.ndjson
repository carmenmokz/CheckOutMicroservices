{"@t":"2020-02-27T17:38:11.6674010Z","@m":"Starting up","@i":"a6ca7b02"}
{"@t":"2020-02-27T17:41:07.0126301Z","@m":"Starting up","@i":"a6ca7b02"}
{"@t":"2020-02-27T17:41:34.9348548Z","@m":"Unable to connect to broker","@i":"7713e04f","SourceContext":"RawRabbit.Channel.ChannelFactory"}
{"@t":"2020-02-27T17:41:34.9737857Z","@m":"Application start-up failed","@i":"f8803f6f","@l":"Fatal","@x":"RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed ---> System.Net.Internals.SocketExceptionFactory+ExtendedSocketException: No connection could be made because the target machine actively refused it 127.0.0.1:5672\r\n   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)\r\n   at System.Net.Sockets.Socket.<>c.<ConnectAsync>b__272_0(IAsyncResult iar)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at RabbitMQ.Client.TcpClientAdapter.ConnectAsync(String host, Int32 port)\r\n   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, Int32 millisecondsTimeout)\r\n   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, Int32 timeout)\r\n   --- End of inner exception stack trace ---\r\n   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)\r\n   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)\r\n   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)\r\n   --- End of inner exception stack trace ---\r\n   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)\r\n   at RawRabbit.Channel.ChannelFactory.ConnectAsync(CancellationToken token)\r\n   at RawRabbit.DependencyInjection.RawRabbitDependencyRegisterExtension.<>c.<AddRawRabbit>b__0_3(IDependencyResolver resolver)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitSingleton(SingletonCallSite singletonCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitSingleton(SingletonCallSite singletonCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass1_0.<RealizeService>b__0(ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)\r\n   at Service.Common.Services.HostBuilder.UseRabbitMq() in D:\\Avantica\\GitLab\\C#\\Avantica Tutorial\\Checkout Microservice Example\\CheckoutManager\\Service.Common\\Services\\ServiceHost.cs:line 46\r\n   at Orders.API.Program.Main(String[] args) in D:\\Avantica\\GitLab\\C#\\Avantica Tutorial\\Checkout Microservice Example\\CheckoutManager\\Orders.API\\Program.cs:line 19"}
{"@t":"2020-02-27T17:42:11.5077407Z","@m":"Starting up","@i":"a6ca7b02"}
{"@t":"2020-02-27T17:42:18.4482063Z","@m":"Unable to connect to broker","@i":"7713e04f","SourceContext":"RawRabbit.Channel.ChannelFactory"}
{"@t":"2020-02-27T17:42:18.4780471Z","@m":"Application start-up failed","@i":"f8803f6f","@l":"Fatal","@x":"RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed ---> System.Net.Internals.SocketExceptionFactory+ExtendedSocketException: No connection could be made because the target machine actively refused it 127.0.0.1:5672\r\n   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)\r\n   at System.Net.Sockets.Socket.<>c.<ConnectAsync>b__272_0(IAsyncResult iar)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at RabbitMQ.Client.TcpClientAdapter.ConnectAsync(String host, Int32 port)\r\n   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, Int32 millisecondsTimeout)\r\n   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, Int32 timeout)\r\n   --- End of inner exception stack trace ---\r\n   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)\r\n   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)\r\n   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)\r\n   --- End of inner exception stack trace ---\r\n   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)\r\n   at RawRabbit.Channel.ChannelFactory.ConnectAsync(CancellationToken token)\r\n   at RawRabbit.DependencyInjection.RawRabbitDependencyRegisterExtension.<>c.<AddRawRabbit>b__0_3(IDependencyResolver resolver)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitSingleton(SingletonCallSite singletonCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitSingleton(SingletonCallSite singletonCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass1_0.<RealizeService>b__0(ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)\r\n   at Service.Common.Services.HostBuilder.UseRabbitMq() in D:\\Avantica\\GitLab\\C#\\Avantica Tutorial\\Checkout Microservice Example\\CheckoutManager\\Service.Common\\Services\\ServiceHost.cs:line 46\r\n   at Orders.API.Program.Main(String[] args) in D:\\Avantica\\GitLab\\C#\\Avantica Tutorial\\Checkout Microservice Example\\CheckoutManager\\Orders.API\\Program.cs:line 19"}
{"@t":"2020-02-27T17:42:33.1382187Z","@m":"Starting up","@i":"a6ca7b02"}
{"@t":"2020-02-27T17:42:36.6569846Z","@m":"Unable to connect to broker","@i":"7713e04f","SourceContext":"RawRabbit.Channel.ChannelFactory"}
{"@t":"2020-02-27T17:42:36.6885167Z","@m":"Application start-up failed","@i":"f8803f6f","@l":"Fatal","@x":"RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed ---> System.Net.Internals.SocketExceptionFactory+ExtendedSocketException: No connection could be made because the target machine actively refused it 127.0.0.1:5672\r\n   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)\r\n   at System.Net.Sockets.Socket.<>c.<ConnectAsync>b__272_0(IAsyncResult iar)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at RabbitMQ.Client.TcpClientAdapter.ConnectAsync(String host, Int32 port)\r\n   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, Int32 millisecondsTimeout)\r\n   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, Int32 timeout)\r\n   --- End of inner exception stack trace ---\r\n   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)\r\n   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)\r\n   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)\r\n   --- End of inner exception stack trace ---\r\n   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)\r\n   at RawRabbit.Channel.ChannelFactory.ConnectAsync(CancellationToken token)\r\n   at RawRabbit.DependencyInjection.RawRabbitDependencyRegisterExtension.<>c.<AddRawRabbit>b__0_3(IDependencyResolver resolver)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitSingleton(SingletonCallSite singletonCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitSingleton(SingletonCallSite singletonCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass1_0.<RealizeService>b__0(ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)\r\n   at Service.Common.Services.HostBuilder.UseRabbitMq() in D:\\Avantica\\GitLab\\C#\\Avantica Tutorial\\Checkout Microservice Example\\CheckoutManager\\Service.Common\\Services\\ServiceHost.cs:line 46\r\n   at Orders.API.Program.Main(String[] args) in D:\\Avantica\\GitLab\\C#\\Avantica Tutorial\\Checkout Microservice Example\\CheckoutManager\\Orders.API\\Program.cs:line 19"}
{"@t":"2020-02-27T17:43:28.6169392Z","@m":"Starting up","@i":"a6ca7b02"}
{"@t":"2020-02-27T17:43:32.2373954Z","@m":"Unable to connect to broker","@i":"7713e04f","SourceContext":"RawRabbit.Channel.ChannelFactory"}
{"@t":"2020-02-27T17:43:32.2701648Z","@m":"Application start-up failed","@i":"f8803f6f","@l":"Fatal","@x":"RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed ---> System.Net.Internals.SocketExceptionFactory+ExtendedSocketException: No connection could be made because the target machine actively refused it 127.0.0.1:5672\r\n   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)\r\n   at System.Net.Sockets.Socket.<>c.<ConnectAsync>b__272_0(IAsyncResult iar)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at RabbitMQ.Client.TcpClientAdapter.ConnectAsync(String host, Int32 port)\r\n   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, Int32 millisecondsTimeout)\r\n   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, Int32 timeout)\r\n   --- End of inner exception stack trace ---\r\n   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)\r\n   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)\r\n   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)\r\n   --- End of inner exception stack trace ---\r\n   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)\r\n   at RawRabbit.Channel.ChannelFactory.ConnectAsync(CancellationToken token)\r\n   at RawRabbit.DependencyInjection.RawRabbitDependencyRegisterExtension.<>c.<AddRawRabbit>b__0_3(IDependencyResolver resolver)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitSingleton(SingletonCallSite singletonCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitSingleton(SingletonCallSite singletonCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass1_0.<RealizeService>b__0(ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)\r\n   at Service.Common.Services.HostBuilder.UseRabbitMq() in D:\\Avantica\\GitLab\\C#\\Avantica Tutorial\\Checkout Microservice Example\\CheckoutManager\\Service.Common\\Services\\ServiceHost.cs:line 46\r\n   at Orders.API.Program.Main(String[] args) in D:\\Avantica\\GitLab\\C#\\Avantica Tutorial\\Checkout Microservice Example\\CheckoutManager\\Orders.API\\Program.cs:line 19"}
{"@t":"2020-02-27T17:44:06.3582489Z","@m":"Starting up","@i":"a6ca7b02"}
{"@t":"2020-02-27T17:44:58.1423384Z","@m":"Starting up","@i":"a6ca7b02"}
{"@t":"2020-02-27T17:45:03.0606193Z","@m":"Unable to connect to broker","@i":"7713e04f","SourceContext":"RawRabbit.Channel.ChannelFactory"}
{"@t":"2020-02-27T17:45:12.1538217Z","@m":"Application start-up failed","@i":"f8803f6f","@l":"Fatal","@x":"RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed ---> System.Net.Internals.SocketExceptionFactory+ExtendedSocketException: No connection could be made because the target machine actively refused it 127.0.0.1:5672\r\n   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)\r\n   at System.Net.Sockets.Socket.<>c.<ConnectAsync>b__272_0(IAsyncResult iar)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at RabbitMQ.Client.TcpClientAdapter.ConnectAsync(String host, Int32 port)\r\n   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, Int32 millisecondsTimeout)\r\n   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, Int32 timeout)\r\n   --- End of inner exception stack trace ---\r\n   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)\r\n   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)\r\n   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)\r\n   --- End of inner exception stack trace ---\r\n   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)\r\n   at RawRabbit.Channel.ChannelFactory.ConnectAsync(CancellationToken token)\r\n   at RawRabbit.DependencyInjection.RawRabbitDependencyRegisterExtension.<>c.<AddRawRabbit>b__0_3(IDependencyResolver resolver)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitSingleton(SingletonCallSite singletonCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitSingleton(SingletonCallSite singletonCallSite, ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass1_0.<RealizeService>b__0(ServiceProviderEngineScope scope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType)\r\n   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)\r\n   at Service.Common.Services.HostBuilder.UseRabbitMq() in D:\\Avantica\\GitLab\\C#\\Avantica Tutorial\\Checkout Microservice Example\\CheckoutManager\\Service.Common\\Services\\ServiceHost.cs:line 46\r\n   at Orders.API.Program.Main(String[] args) in D:\\Avantica\\GitLab\\C#\\Avantica Tutorial\\Checkout Microservice Example\\CheckoutManager\\Orders.API\\Program.cs:line 19"}
{"@t":"2020-02-27T17:45:19.6702872Z","@m":"Starting up","@i":"a6ca7b02"}
{"@t":"2020-02-27T17:51:11.0736734Z","@m":"Starting up","@i":"a6ca7b02"}
{"@t":"2020-02-27T17:51:20.1201675Z","@m":"Unable to connect to broker","@i":"7713e04f","SourceContext":"RawRabbit.Channel.ChannelFactory"}
{"@t":"2020-02-27T17:52:58.8350388Z","@m":"Application start-up failed","@i":"f8803f6f","@l":"Fatal","@x":"RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed ---> System.Net.Internals.SocketExceptionFactory+ExtendedSocketException: No connection could be made because the target machine actively refused it 127.0.0.1:5672\r\n   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)\r\n   at System.Net.Sockets.Socket.<>c.<ConnectAsync>b__272_0(IAsyncResult iar)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at RabbitMQ.Client.TcpClientAdapter.ConnectAsync(String host, Int32 port)\r\n   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, Int32 millisecondsTimeout)\r\n   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, Int32 timeout)\r\n   --- End of inner exception stack trace ---\r\n   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)\r\n   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)\r\n   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)\r\n   --- End of inner exception stack trace ---\r\n   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)\r\n   at RawRabbit.Channel.ChannelFactory.ConnectAsync(CancellationToken token)\r\n   at RawRabbit.DependencyInjection.RawRabbitDependencyRegisterExtension.<>c.<AddRawRabbit>b__0_3(IDependencyResolver resolver)\r\n   at RawRabbit.DependencyInjection.SimpleDependencyInjection.<>c__DisplayClass4_0`2.<AddSingleton>b__0()\r\n   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)\r\n   at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)\r\n   at System.Lazy`1.CreateValue()\r\n   at RawRabbit.DependencyInjection.SimpleDependencyInjection.GetService(Type serviceType, Object[] additional)\r\n   at RawRabbit.DependencyInjection.SimpleDependencyInjection.GetService[TService](Object[] additional)\r\n   at RawRabbit.Instantiation.InstanceFactory.Create()\r\n   at RawRabbit.Instantiation.RawRabbitFactory.CreateSingleton(RawRabbitOptions options)\r\n   at Orders.API.Extentions.ServiceExtensions.AddRabbitMq(IServiceCollection services) in D:\\Avantica\\GitLab\\C#\\Avantica Tutorial\\Checkout Microservice Example\\CheckoutManager\\Orders.API\\Extensions\\ServiceExtensions.cs:line 82\r\n   at Orders.API.Startup.ConfigureServices(IServiceCollection services) in D:\\Avantica\\GitLab\\C#\\Avantica Tutorial\\Checkout Microservice Example\\CheckoutManager\\Orders.API\\Startup.cs:line 42\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.ConfigureServices(IServiceCollection services)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.EnsureApplicationServices()\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.Initialize()\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.Build()\r\n   at Service.Common.Services.ServiceHost.Create[TStartup](String[] args) in D:\\Avantica\\GitLab\\C#\\Avantica Tutorial\\Checkout Microservice Example\\CheckoutManager\\Service.Common\\Services\\ServiceHost.cs:line 28\r\n   at Orders.API.Program.Main(String[] args) in D:\\Avantica\\GitLab\\C#\\Avantica Tutorial\\Checkout Microservice Example\\CheckoutManager\\Orders.API\\Program.cs:line 19"}
{"@t":"2020-02-27T17:53:04.9954422Z","@m":"Starting up","@i":"a6ca7b02"}
{"@t":"2020-02-27T17:53:28.1269300Z","@m":"Unable to connect to broker","@i":"7713e04f","SourceContext":"RawRabbit.Channel.ChannelFactory"}
{"@t":"2020-02-27T17:54:36.1629265Z","@m":"Starting up","@i":"a6ca7b02"}
{"@t":"2020-02-27T18:01:17.5583695Z","@m":"Starting up","@i":"a6ca7b02"}
{"@t":"2020-02-27T18:01:19.1494279Z","@m":"Unable to connect to broker","@i":"7713e04f","SourceContext":"RawRabbit.Channel.ChannelFactory"}
{"@t":"2020-02-27T18:01:27.0209649Z","@m":"Application start-up failed","@i":"f8803f6f","@l":"Fatal","@x":"RabbitMQ.Client.Exceptions.BrokerUnreachableException: None of the specified endpoints were reachable ---> RabbitMQ.Client.Exceptions.ConnectFailureException: Connection failed ---> System.Net.Sockets.SocketException: No such host is known\r\n   at System.Net.Dns.HostResolutionEndHelper(IAsyncResult asyncResult)\r\n   at System.Net.Dns.EndGetHostAddresses(IAsyncResult asyncResult)\r\n   at System.Net.Dns.<>c.<GetHostAddressesAsync>b__25_1(IAsyncResult asyncResult)\r\n   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at RabbitMQ.Client.TcpClientAdapter.ConnectAsync(String host, Int32 port)\r\n   at RabbitMQ.Client.Impl.TaskExtensions.TimeoutAfter(Task task, Int32 millisecondsTimeout)\r\n   at RabbitMQ.Client.Impl.SocketFrameHandler.ConnectOrFail(ITcpClient socket, AmqpTcpEndpoint endpoint, Int32 timeout)\r\n   --- End of inner exception stack trace ---\r\n   at RabbitMQ.Client.EndpointResolverExtensions.SelectOne[T](IEndpointResolver resolver, Func`2 selector)\r\n   at RabbitMQ.Client.Framing.Impl.AutorecoveringConnection.Init(IEndpointResolver endpoints)\r\n   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)\r\n   --- End of inner exception stack trace ---\r\n   at RabbitMQ.Client.ConnectionFactory.CreateConnection(IEndpointResolver endpointResolver, String clientProvidedName)\r\n   at RawRabbit.Channel.ChannelFactory.ConnectAsync(CancellationToken token)\r\n   at RawRabbit.DependencyInjection.RawRabbitDependencyRegisterExtension.<>c.<AddRawRabbit>b__0_3(IDependencyResolver resolver)\r\n   at RawRabbit.DependencyInjection.SimpleDependencyInjection.<>c__DisplayClass4_0`2.<AddSingleton>b__0()\r\n   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)\r\n   at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)\r\n   at System.Lazy`1.CreateValue()\r\n   at RawRabbit.DependencyInjection.SimpleDependencyInjection.GetService(Type serviceType, Object[] additional)\r\n   at RawRabbit.DependencyInjection.SimpleDependencyInjection.GetService[TService](Object[] additional)\r\n   at RawRabbit.Instantiation.InstanceFactory.Create()\r\n   at RawRabbit.Instantiation.RawRabbitFactory.CreateSingleton(RawRabbitOptions options)\r\n   at Orders.API.Extentions.ServiceExtensions.AddRabbitMq(IServiceCollection services) in D:\\Avantica\\GitLab\\C#\\Avantica Tutorial\\Checkout Microservice Example\\CheckoutManager\\Orders.API\\Extensions\\ServiceExtensions.cs:line 82\r\n   at Orders.API.Startup.ConfigureServices(IServiceCollection services) in D:\\Avantica\\GitLab\\C#\\Avantica Tutorial\\Checkout Microservice Example\\CheckoutManager\\Orders.API\\Startup.cs:line 42\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.ConfigureServices(IServiceCollection services)\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.EnsureApplicationServices()\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.Initialize()\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.Build()\r\n   at Service.Common.Services.ServiceHost.Create[TStartup](String[] args) in D:\\Avantica\\GitLab\\C#\\Avantica Tutorial\\Checkout Microservice Example\\CheckoutManager\\Service.Common\\Services\\ServiceHost.cs:line 28\r\n   at Orders.API.Program.Main(String[] args) in D:\\Avantica\\GitLab\\C#\\Avantica Tutorial\\Checkout Microservice Example\\CheckoutManager\\Orders.API\\Program.cs:line 19"}
{"@t":"2020-02-27T18:01:58.4918241Z","@m":"Starting up","@i":"a6ca7b02"}
{"@t":"2020-02-27T18:03:43.4770229Z","@m":"Starting up","@i":"a6ca7b02"}
{"@t":"2020-02-27T18:04:02.3676068Z","@m":"Declaring exchange \"service.common.events\".","@i":"1f4affda","exchangeName":"service.common.events","SourceContext":"RawRabbit.Common.TopologyProvider"}
{"@t":"2020-02-27T18:04:02.4562052Z","@m":"Setting 'Publish Acknowledge' for channel '2'","@i":"202bea88","channelNumber":2,"SourceContext":"RawRabbit.Operations.Publish.Middleware.PublishAcknowledgeMiddleware"}
{"@t":"2020-02-27T18:04:02.4731629Z","@m":"Setting up publish acknowledgement for 1 with timeout 0:00:01","@i":"25a85374","publishSequence":1,"timeout":"00:00:01","SourceContext":"RawRabbit.Operations.Publish.Middleware.PublishAcknowledgeMiddleware"}
{"@t":"2020-02-27T18:04:02.4774030Z","@m":"Sequence 1 added to dictionary","@i":"ef140498","sequence":1,"SourceContext":"RawRabbit.Operations.Publish.Middleware.PublishAcknowledgeMiddleware"}
{"@t":"2020-02-27T18:04:02.4819422Z","@m":"Performing basic publish with routing key \"postedorder\" on exchange \"service.common.events\".","@i":"475a66e6","routingKey":"postedorder","exchangeName":"service.common.events","SourceContext":"RawRabbit.Pipe.Middleware.BasicPublishMiddleware"}
{"@t":"2020-02-27T18:04:02.4973219Z","@m":"Recieived ack for 1","@i":"18ddbbf3","deliveryTag":1,"SourceContext":"RawRabbit.Operations.Publish.Middleware.PublishAcknowledgeMiddleware"}
{"@t":"2020-02-27T18:05:43.3305355Z","@m":"Setting up publish acknowledgement for 2 with timeout 0:00:01","@i":"25a85374","publishSequence":2,"timeout":"00:00:01","SourceContext":"RawRabbit.Operations.Publish.Middleware.PublishAcknowledgeMiddleware"}
{"@t":"2020-02-27T18:05:43.3309457Z","@m":"Sequence 2 added to dictionary","@i":"ef140498","sequence":2,"SourceContext":"RawRabbit.Operations.Publish.Middleware.PublishAcknowledgeMiddleware"}
{"@t":"2020-02-27T18:05:43.3313691Z","@m":"Performing basic publish with routing key \"postedorder\" on exchange \"service.common.events\".","@i":"475a66e6","routingKey":"postedorder","exchangeName":"service.common.events","SourceContext":"RawRabbit.Pipe.Middleware.BasicPublishMiddleware"}
{"@t":"2020-02-27T18:05:43.3353324Z","@m":"Recieived ack for 2","@i":"18ddbbf3","deliveryTag":2,"SourceContext":"RawRabbit.Operations.Publish.Middleware.PublishAcknowledgeMiddleware"}
